/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
 
 
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        vector<vector<int>>v;
         map<int,map<int,multiset<int>>> m;
    queue<pair<TreeNode*, pair<int, int>>> s;
        
        s.push({root,{0,0}});
        while(s.empty()==false){
            
            auto p=s.front();
            
            TreeNode* curr=p.first;
            int x = p.second.first, y = p.second.second;
            
             m[x][y].insert(curr->val);
            s.pop();
            
            if(curr->left)
            {
                 s.push({curr->left,{x-1,y+1}});
            }
           
            
           if(curr->right){
                
                s.push({curr->right,{x+1,y+1}});
            }
            
        }
        
       
        for(auto p:m){
          vector<int> col;
            for (auto q : p.second) {
                col.insert(col.end(), q.second.begin(), q.second.end());
            }
            v.push_back(col);
    }
        return v;
    }
};