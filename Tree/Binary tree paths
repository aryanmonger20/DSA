/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public: string s;
        vector<string>ans;
    
    vector<string> binaryTreePaths(TreeNode* root) {
     
        
        paths(root,"");
            return ans;
    }
    
    void paths(TreeNode* root,string s){
        if(root==NULL)
            return ;
        //  ans += to_string(root->val) + "->";
        s=s+to_string(root->val)+"->";
        
        
        if(!root->left && !root->right)
           {  s.erase(s.length()-2, 2);
            ans.push_back(s);
        }
        paths(root->left,s);
        paths(root->right,s);
        
        
       
          
    }
};