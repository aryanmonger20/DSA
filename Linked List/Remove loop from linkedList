class Solution
{
    public:
    

    //Function to remove a loop in the linked list.
    void removeLoop(Node* head)
    {
        // code here
        // just remove the loop without losing any nodes
       
            Node* slow=head;
            Node* fast=head;
            
            //check cycle
            while(fast!=NULL &&fast->next!=NULL){
                slow=slow->next;
                fast=fast->next->next;
                
                if(fast==slow)
                break;
            }
            
            //no cycle
            // if(fast!=slow)
            // return;
    
    //case when starting node is cycle
            if(slow==head){
                while(fast->next!=head)
               { fast=fast->next;
                   
               }
             
                fast->next=NULL;
                return;
            }
            
            if(slow==fast){
                slow=head;
                while(slow->next!=fast->next){
                    slow=slow->next;
                    fast=fast->next;
                }
                fast->next=NULL;
                return;
            }
        
    }
};