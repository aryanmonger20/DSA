/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
      ListNode* fast=head;
  ListNode* slow=head;
    
    int diff=-1;
        if(fast->next==NULL)
            return NULL;
                                                
    while(fast!=NULL){
        fast=fast->next;
        
        diff++;
        
        if(diff>n){
            slow=slow->next;
        }
    }
        if(diff+1==n)
            return head=head->next;
        else
    slow->next=slow->next->next;
    
   
        
    return head;
    }
};