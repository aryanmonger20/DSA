/*
struct Node {
  int data;
  struct Node *next;
  Node(int x) {
    data = x;
    next = NULL;
  }
};*/

//Function to remove duplicates from sorted linked list.
Node *removeDuplicates(Node *head)
{

 struct Node *prev=head,*start=head;
 head=head->next;
 while(head!=NULL)
 {
 if(prev->data==head->data){
     Node *temp1=prev->next;
     prev->next=head->next;
   
     
     
 }
 else
 prev=head;
 head=head->next;
 
 
}
return start;
}

/////////////////////////////////
//for unsorted linkedlist//
////////////////////////////////

The structure of linked list is the following

struct Node {
  int data;
  struct Node *next;
  Node(int x) {
    data = x;
    next = NULL;
  }
};
*/


class Solution
{
    public:
    //Function to remove duplicates from unsorted linked list.
    Node * removeDuplicates( Node *head) 
    {
     set<int> s;
    Node *t=head;
    s.insert(t->data);
    while(t->next!=NULL)
    {
        if(s.find(t->next->data)!=s.end())
        {
            t->next=t->next->next;
        }
        else
        {
            t=t->next;
            s.insert(t->data);
        }
    }
    return head;
    }
};
