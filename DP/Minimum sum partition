  class Solution{
	public:
	int minDiffernce(int arr[], int n) 
	{ 
	    int sum=0;
	    for(int i=0;i<n;i++)
	    {
	        sum+=arr[i];
	} 
	int dp[n+1][sum+1];
        
        for(int i=0;i<=n;i++)
        {
            for(int j=0;j<=sum;j++)
            {  
                if(i == 0 && j == 0)
                dp[i][j] = 1;
                else if(i == 0)
                dp[i][j] = 0;
                else if(j == 0)
                dp[i][j] = 1;
                else
                if(j>=arr[i-1])
                {
                    dp[i][j]=dp[i-1][j-arr[i-1]]||dp[i-1][j];
                }
                else
                 dp[i][j]=dp[i-1][j];
            }
        }
        
        int mn=INT_MAX;
        vector<int>v;
        
	for(int i=0;i<=sum;i++)
	{
	    if(dp[n][i])
	    v.push_back(i);
	}
	//cout<<sum;
	for(int i=0;i<v.size();i++){
	   // cout<<v[i]<<" ";
	    if(sum>=2*v[i])
	    mn=min(mn,sum-2*v[i]);
	    else break;
	}
	return mn;
	}
};